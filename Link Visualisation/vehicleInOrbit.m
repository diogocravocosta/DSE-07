function h2ermes = vehicleInOrbit(sc)
%VEHICLEINORBIT Summary of this function goes here
%   Detailed explanation goes here

%% Define orbital parameters
% Earth radius + altitude
semiMajorAxis = earthRadius + 600e3;       % meters
% Circular orbit
eccentricity = 0;
% 6 degree inclination
inclination = 6;                           % degrees
% Various initial parameters of orbit location
rightAscensionOfAscendingNode = 180;         % degrees
argumentOfPeriapsis = 0;                   % degrees
trueAnomaly = 0;                           % degrees

%% Create vehicle
h2ermes = satellite(sc, ...
    semiMajorAxis, ...
    eccentricity, ...
    inclination, ...
    rightAscensionOfAscendingNode, ...
    argumentOfPeriapsis, ...
    trueAnomaly, ...
    "Name","H2ERMES", ...
    "OrbitPropagator","SGP4");

%% Add antennas

max_frequency = 3e9;
flexiSlot = createFlexislot(max_frequency);
body_radius = 3.5;     % m

% Tx parameters
frequency = 2.29e9;   % Hz
power = pow2db(40);   % dbW
bitrate = 10;         % Mbps
txloss = 0;

% Rx parameters
rxloss = 0;           % dB
prereceiverloss = 0;  % dB
g_over_t = 0;             % dB/K
Eb_over_No_margin = 20;     % dB

% Transmitters
h2ermesTx = transmitter(h2ermes, ...
    "Name", ["H2ermes Tx 1" "H2ermes Tx 2" "H2ermes Tx 3"], ...
    "MountingLocation", [[body_radius * cos(0);            body_radius * sin(0);            0] ...
                         [body_radius * cos(deg2rad(120)); body_radius * sin(deg2rad(120)); 0] ...
                         [body_radius * cos(deg2rad(240)); body_radius * sin(deg2rad(240)); 0]], ... 
    "MountingAngles", [[0; 0; 0] [120; 0; 0] [240; 0; 0]], ...
    "Antenna", flexiSlot, ...
    "SystemLoss", txloss, ...
    "Frequency", frequency, ...
    "BitRate", bitrate, ...
    "Power", power);

% Receivers
h2ermesRx = receiver(h2ermes, ...
    "Name", ["H2ermes Rx 1" "H2ermes Rx 2" "H2ermes Rx 3"], ...
    "MountingAngles", [[0; 0; 0] [120; 0; 0] [240; 0; 0]], ...
    "Antenna", flexiSlot, ...
    "SystemLoss", rxloss, ...
    "PreReceiverLoss", prereceiverloss, ...
    "GainToNoiseTemperatureRatio", g_over_t, ...
    "RequiredEbNo", Eb_over_No_margin);

end

